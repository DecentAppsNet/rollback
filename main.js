import{readFile as T}from"fs/promises";import q from"path";async function $(t){let e=await fetch(`https://raw.githubusercontent.com/DecentAppsNet/${t}/refs/heads/main/version.txt`);if(!e.ok)throw new Error(`Failed to fetch action version: ${e.statusText}`);return(await e.text()).trim()}async function C(){try{return(await T(q.join(__dirname,"version.txt"),"utf8")).trim()}catch(t){throw new Error(`Failed to read local action version: ${t.message}`)}}var h=class extends Error{constructor(e){super(e),this.name="ExpectedError"}},p=h;function k(t){console.error(`::error::${t}`)}function d(t){console.warn(`::warning::${t}`)}function H(t){console.log(`::notice::${t}`)}function R(t){H(`\u2705 ${t}`)}function c(t){console.log(t)}function l(t){k(t),process.exit(1)}function f(t){console.log(`::group::${t}`)}function g(){console.log("::endgroup::")}function x(t,e=!1){let o=`INPUT_${t.replace(/ /g,"_").toUpperCase()}`,n=process.env[o];return e&&!n&&l(`Input ${t} is required.`),n||""}function y(){let t=process.env.GITHUB_REPOSITORY_OWNER;if(!t)throw new p("GITHUB_REPOSITORY_OWNER environment variable is not set.");return t}function b(){return process.env.GITHUB_ACTIONS==="true"}import*as V from"node:https";async function E(t,e){return new Promise((o,n)=>{t.headers||(t.headers={}),t.headers["Content-Length"]=Buffer.byteLength(e);let r=V.request(t,s=>{let i="";s.on("data",a=>{i+=a}),s.on("end",async()=>{s.statusCode&&s.statusCode>=200&&s.statusCode<300?o({statusCode:s.statusCode,body:i}):n(new p(`Request to ${t.hostname} failed with status code: ${s.statusCode}. Response: ${i}`))})});r.on("error",s=>n(s)),r.write(e),r.end()}).catch(o=>{throw o})}var v="1.0",S=`v${v} Decent Tools`;function U(t){let e="<!-- v",o=t.indexOf(e);if(o===-1)return null;let n=o+e.length,r=t.indexOf(" ",n);return r===-1?null:t.substring(n,r)}function w(t,e){let o=` ${e}='`,n=t.indexOf(o);if(n===-1)return null;let r=n+o.length,s=t.indexOf("'",r);return s===-1?null:t.substring(r,s)}function B(t){let e=U(t);if(!e)throw Error("Failed to parse stage index format version.");if(e!==v)throw Error(`Unsupported stage index format version ${e}.`);return e}function I(){return{productionVersion:"",rollbackVersion:"",stageVersion:""}}function O(t,e,o,n){let r=`/_${t}/${e}/`;return`<!DOCTYPE html><html><head><title>Stage Index for ${t}</title><script>
<!-- ${S}. Hand-edit at your own risk! -->
const productionVersion='${o}';
const rollbackVersion='${n}';
const stageVersion='${e}';
window.location.href='${r}';
</script></head><body></body></html>`}async function P(t){let e=`https://decentapps.net/_${t}/index.html`,o=await fetch(e);if(!o.ok)return I();let n=await o.text();try{B(n)}catch(a){return d(`Could not retrieve app versions from existing stage index at ${e}: ${a.message}.`),I()}let r=w(n,"productionVersion")??"",s=w(n,"rollbackVersion")??"";return{stageVersion:w(n,"stageVersion")??"",productionVersion:r,rollbackVersion:s}}var G="partner.decentapps.net";async function A(t,e,o,n,r,s,i){let a=i?`/api/deployment/${o}/index.html`:`/api/deployment/${o}/index.html?updateRoute=true`,m={hostname:G,path:a,port:443,method:"PUT",headers:{"Content-Type":"text/html",Authorization:`Bearer ${e}`,"x-repo-owner":t,Accept:"application/json"}},_=O(o,n,r,s),u=await E(m,_);if(u.statusCode<200||u.statusCode>=300)throw new Error(`Failed to upload file to partner service. Status code: ${u.statusCode}. Response: ${u.body}`)}async function F(){try{f("Checking action version"),c("fetch local action version");let t=await C();c("fetch latest action version");let e=await $("rollback");t!==e?d(`Local action version ${t} does not match latest action version ${e}. Consider updating your action.`):c(`Local action version ${t} matches latest action version.`),g(),f("Collecting inputs"),c("repo owner");let o=y();c("Decent API key");let n=x("api-key",!0);c("app name");let r=x("app-name",!0);g(),f("Updating stage index"),c("fetch app versions");let{stageVersion:s,productionVersion:i,rollbackVersion:a}=await P(r);(!a||a===i)&&l(`No rollback version available for app ${r}.`),i=a,a="",c(`uploading new stage index - stage version=${s}, production version=${i}, rollback version=${a}`),await A(o,n,r,s,i,a,!0),g();let m=`https://decentapps.net/${r}/`;R(`Successfully rolled back production URL "${m}" to ${i} version. Staging remains at ${s} version.`)}catch(t){let o=!b()||t.name==="ExpectedError"?t.message:"An unexpected error occurred.";l(o)}}F();
