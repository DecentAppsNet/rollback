var d=class extends Error{constructor(e){super(e),this.name="ExpectedError"}},c=d;function V(t){console.error(`::error::${t}`)}function m(t){console.warn(`::warning::${t}`)}function I(t){console.log(`::notice::${t}`)}function h(t){I(`\u2705 ${t}`)}function p(t){V(t),process.exit(1)}function l(t,e=!1){let n=`INPUT_${t.replace(/-/g,"_").toUpperCase()}`,o=process.env[n];return e&&!o&&p(`Input ${t} is required.`),o||""}function x(){let t=process.env.GITHUB_REPOSITORY_OWNER;if(!t)throw new c("GITHUB_REPOSITORY_OWNER environment variable is not set.");return t}function w(){return process.env.GITHUB_ACTIONS==="true"}import*as R from"node:https";async function $(t,e){return new Promise((n,o)=>{t.headers||(t.headers={}),t.headers["Content-Length"]=Buffer.byteLength(e);let s=R.request(t,r=>{let i="";r.on("data",a=>{i+=a}),r.on("end",async()=>{r.statusCode&&r.statusCode>=200&&r.statusCode<300?n({statusCode:r.statusCode,body:i}):o(new c(`Request to ${t.hostname} failed with status code: ${r.statusCode}. Response: ${i}`))})});s.on("error",r=>o(r)),s.write(e),s.end()}).catch(n=>{throw n})}var g="1.0",v=`v${g} Decent Tools`;function P(t){let e="<!-- v",n=t.indexOf(e);if(n===-1)return null;let o=n+e.length,s=t.indexOf(" ",o);return s===-1?null:t.substring(o,s)}function f(t,e){let n=` ${e}='`,o=t.indexOf(n);if(o===-1)return null;let s=o+n.length,r=t.indexOf("'",s);return r===-1?null:t.substring(s,r)}function T(t){let e=P(t);if(!e)throw Error("Failed to parse stage index format version.");if(e!==g)throw Error(`Unsupported stage index format version ${e}.`);return e}function C(){return{productionVersion:"",rollbackVersion:"",stageVersion:""}}function b(t,e,n,o){let s=`/_${t}/${e}/`;return`<!DOCTYPE html><html><head><title>Stage Index for ${t}</title><script>
<!-- ${v}. Hand-edit at your own risk! -->
const productionVersion='${n}';
const rollbackVersion='${o}';
const stageVersion='${e}';
window.location.href='${s}';
</script></head><body></body></html>`}async function y(t){let e=`https://decentapps.net/_${t}/index.html`,n=await fetch(e);if(!n.ok)return C();let o=await n.text();try{T(o)}catch(a){return m(`Could not retrieve app versions from existing stage index at ${e}: ${a.message}.`),C()}let s=f(o,"productionVersion")??"",r=f(o,"rollbackVersion")??"";return{stageVersion:f(o,"stageVersion")??"",productionVersion:s,rollbackVersion:r}}var _="partner.decentapps.net";async function S(t,e,n,o,s,r,i){let a=i?`/api/deployment/${n}/index.html`:`/api/deployment/${n}/index.html?updateRoute=true`,E={hostname:_,path:a,port:443,method:"PUT",headers:{"Content-Type":"text/html",Authorization:`Bearer ${e}`,"x-repo-owner":t,Accept:"application/json"}},O=b(n,o,s,r),u=await $(E,O);if(u.statusCode<200||u.statusCode>=300)throw new Error(`Failed to upload file to partner service. Status code: ${u.statusCode}. Response: ${u.body}`)}async function q(){try{let t=x(),e=l("api-key",!0),n=l("app-name",!0),{stageVersion:o,productionVersion:s,rollbackVersion:r}=await y(n);(!r||r===s)&&p(`No rollback version available for app ${n}.`),s=r,r="",await S(t,e,n,o,s,r,!0);let i=`https://decentapps.net/${n}/`;h(`Successfully rolled back production URL "${i}" to v${s}. Staging remains at v${o}.`)}catch(t){let n=!w()||t.name==="ExpectedError"?t.message:"An unexpected error occurred.";p(n)}}q();
